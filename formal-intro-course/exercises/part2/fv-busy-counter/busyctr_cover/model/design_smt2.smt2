; SMT-LIBv2 description generated by Yosys 0.9+932 (git sha1 4072a966, clang 6.0.0-1ubuntu2 -fPIC -Os)
; yosys-smt2-module busyctr
(declare-sort |busyctr_s| 0)
(declare-fun |busyctr_is| (|busyctr_s|) Bool)
; yosys-smt2-output o_busy 1
; yosys-smt2-wire o_busy 1
(declare-fun |busyctr#0| (|busyctr_s|) (_ BitVec 16)) ; \counter
(define-fun |busyctr#1| ((state |busyctr_s|)) Bool (distinct (|busyctr#0| state) #b0000000000000000)) ; \o_busy
(define-fun |busyctr_n o_busy| ((state |busyctr_s|)) Bool (|busyctr#1| state))
; yosys-smt2-input i_start_signal 1
; yosys-smt2-wire i_start_signal 1
(declare-fun |busyctr#2| (|busyctr_s|) Bool) ; \i_start_signal
(define-fun |busyctr_n i_start_signal| ((state |busyctr_s|)) Bool (|busyctr#2| state))
; yosys-smt2-input i_reset 1
; yosys-smt2-wire i_reset 1
(declare-fun |busyctr#3| (|busyctr_s|) Bool) ; \i_reset
(define-fun |busyctr_n i_reset| ((state |busyctr_s|)) Bool (|busyctr#3| state))
; yosys-smt2-input i_clk 1
; yosys-smt2-wire i_clk 1
; yosys-smt2-clock i_clk posedge
(declare-fun |busyctr#4| (|busyctr_s|) Bool) ; \i_clk
(define-fun |busyctr_n i_clk| ((state |busyctr_s|)) Bool (|busyctr#4| state))
; yosys-smt2-register f_past_valid 1
; yosys-smt2-wire f_past_valid 1
(declare-fun |busyctr#5| (|busyctr_s|) (_ BitVec 1)) ; \f_past_valid
(define-fun |busyctr_n f_past_valid| ((state |busyctr_s|)) Bool (= ((_ extract 0 0) (|busyctr#5| state)) #b1))
; yosys-smt2-register counter 16
; yosys-smt2-wire counter 16
(define-fun |busyctr_n counter| ((state |busyctr_s|)) (_ BitVec 16) (|busyctr#0| state))
; yosys-smt2-register $past$busyctr.v:42$2$0 16
(declare-fun |busyctr#6| (|busyctr_s|) (_ BitVec 16)) ; $past$busyctr.v:42$2$0
(define-fun |busyctr_n $past$busyctr.v:42$2$0| ((state |busyctr_s|)) (_ BitVec 16) (|busyctr#6| state))
; yosys-smt2-register $past$busyctr.v:41$1$0 1
(declare-fun |busyctr#7| (|busyctr_s|) (_ BitVec 1)) ; $past$busyctr.v:41$1$0
(define-fun |busyctr_n $past$busyctr.v:41$1$0| ((state |busyctr_s|)) Bool (= ((_ extract 0 0) (|busyctr#7| state)) #b1))
; yosys-smt2-register $formal$busyctr.v:42$4_EN 1
(declare-fun |busyctr#8| (|busyctr_s|) (_ BitVec 1)) ; $formal$busyctr.v:42$4_EN
(define-fun |busyctr_n $formal$busyctr.v:42$4_EN| ((state |busyctr_s|)) Bool (= ((_ extract 0 0) (|busyctr#8| state)) #b1))
; yosys-smt2-register $formal$busyctr.v:42$4_CHECK 1
(declare-fun |busyctr#9| (|busyctr_s|) (_ BitVec 1)) ; $formal$busyctr.v:42$4_CHECK
(define-fun |busyctr_n $formal$busyctr.v:42$4_CHECK| ((state |busyctr_s|)) Bool (= ((_ extract 0 0) (|busyctr#9| state)) #b1))
; yosys-smt2-register $formal$busyctr.v:37$3_EN 1
(declare-fun |busyctr#10| (|busyctr_s|) (_ BitVec 1)) ; $formal$busyctr.v:37$3_EN
(define-fun |busyctr_n $formal$busyctr.v:37$3_EN| ((state |busyctr_s|)) Bool (= ((_ extract 0 0) (|busyctr#10| state)) #b1))
; yosys-smt2-register $formal$busyctr.v:37$3_CHECK 1
(declare-fun |busyctr#11| (|busyctr_s|) (_ BitVec 1)) ; $formal$busyctr.v:37$3_CHECK
(define-fun |busyctr_n $formal$busyctr.v:37$3_CHECK| ((state |busyctr_s|)) Bool (= ((_ extract 0 0) (|busyctr#11| state)) #b1))
; yosys-smt2-assert 0 busyctr.v:42
(define-fun |busyctr_a 0| ((state |busyctr_s|)) Bool (or (= ((_ extract 0 0) (|busyctr#9| state)) #b1) (not (= ((_ extract 0 0) (|busyctr#8| state)) #b1)))) ; $assert$busyctr.v:42$28
; yosys-smt2-assert 1 busyctr.v:37
(define-fun |busyctr_a 1| ((state |busyctr_s|)) Bool (or (= ((_ extract 0 0) (|busyctr#11| state)) #b1) (not (= ((_ extract 0 0) (|busyctr#10| state)) #b1)))) ; $assert$busyctr.v:37$27
; yosys-smt2-anyseq busyctr#12 1 $auto$setundef.cc:524:execute$63
(declare-fun |busyctr#12| (|busyctr_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2318:Anyseq$64
(define-fun |busyctr#13| ((state |busyctr_s|)) (_ BitVec 1) (ite (|busyctr#1| state) #b1 (|busyctr#12| state))) ; $0$formal$busyctr.v:37$3_CHECK[0:0]$15
(define-fun |busyctr#14| ((state |busyctr_s|)) (_ BitVec 1) (ite (|busyctr#1| state) #b1 #b0)) ; $0$formal$busyctr.v:37$3_EN[0:0]$16
; yosys-smt2-anyseq busyctr#15 1 $auto$setundef.cc:524:execute$67
(declare-fun |busyctr#15| (|busyctr_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2318:Anyseq$68
; yosys-smt2-anyseq busyctr#16 1 $auto$setundef.cc:524:execute$65
(declare-fun |busyctr#16| (|busyctr_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2318:Anyseq$66
(define-fun |busyctr#17| ((state |busyctr_s|)) (_ BitVec 17) (bvsub (concat #b0 (|busyctr#6| state)) #b00000000000000001)) ; { $sub$busyctr.v:42$25_Y [31] $sub$busyctr.v:42$25_Y [15:0] }
(define-fun |busyctr#18| ((state |busyctr_s|)) Bool (= (concat #b0000000000000000 (|busyctr#0| state)) (concat ((_ extract 16 16) (|busyctr#17| state)) (concat ((_ extract 16 16) (|busyctr#17| state)) (concat ((_ extract 16 16) (|busyctr#17| state)) (concat ((_ extract 16 16) (|busyctr#17| state)) (concat ((_ extract 16 16) (|busyctr#17| state)) (concat ((_ extract 16 16) (|busyctr#17| state)) (concat ((_ extract 16 16) (|busyctr#17| state)) (concat ((_ extract 16 16) (|busyctr#17| state)) (concat ((_ extract 16 16) (|busyctr#17| state)) (concat ((_ extract 16 16) (|busyctr#17| state)) (concat ((_ extract 16 16) (|busyctr#17| state)) (concat ((_ extract 16 16) (|busyctr#17| state)) (concat ((_ extract 16 16) (|busyctr#17| state)) (concat ((_ extract 16 16) (|busyctr#17| state)) (concat ((_ extract 16 16) (|busyctr#17| state)) (|busyctr#17| state)))))))))))))))))) ; $eq$busyctr.v:42$26_Y
(define-fun |busyctr#19| ((state |busyctr_s|)) Bool (not (or  (= ((_ extract 0 0) (|busyctr#7| state)) #b1) false))) ; $logic_not$busyctr.v:41$21_Y
(define-fun |busyctr#20| ((state |busyctr_s|)) Bool (and (or  (|busyctr#1| state) false) (or  (|busyctr#19| state) false))) ; $logic_and$busyctr.v:41$22_Y
(define-fun |busyctr#21| ((state |busyctr_s|)) Bool (not (or  (|busyctr#20| state) false))) ; $logic_not$busyctr.v:41$23_Y
(define-fun |busyctr#22| ((state |busyctr_s|)) Bool (and (or  (|busyctr#1| state) false) (or  (|busyctr#21| state) false))) ; $logic_and$busyctr.v:41$24_Y
(define-fun |busyctr#23| ((state |busyctr_s|)) (_ BitVec 1) (ite (|busyctr#22| state) (ite (|busyctr#18| state) #b1 #b0) (|busyctr#16| state))) ; $procmux$43_Y
(define-fun |busyctr#24| ((state |busyctr_s|)) Bool (and (or  (= ((_ extract 0 0) (|busyctr#5| state)) #b1) false) (or  (|busyctr#2| state) false))) ; $logic_and$busyctr.v:40$20_Y
(define-fun |busyctr#25| ((state |busyctr_s|)) (_ BitVec 1) (ite (|busyctr#24| state) (|busyctr#23| state) (|busyctr#15| state))) ; $0$formal$busyctr.v:42$4_CHECK[0:0]$17
(define-fun |busyctr#26| ((state |busyctr_s|)) (_ BitVec 1) (ite (|busyctr#22| state) #b1 #b0)) ; $procmux$39_Y
(define-fun |busyctr#27| ((state |busyctr_s|)) (_ BitVec 1) (ite (|busyctr#24| state) (|busyctr#26| state) #b0)) ; $0$formal$busyctr.v:42$4_EN[0:0]$18
(define-fun |busyctr#28| ((state |busyctr_s|)) (_ BitVec 16) (bvsub (|busyctr#0| state) #b0000000000000001)) ; $sub$busyctr.v:19$9_Y
(define-fun |busyctr#29| ((state |busyctr_s|)) (_ BitVec 16) (ite (|busyctr#1| state) (|busyctr#28| state) (|busyctr#0| state))) ; $procmux$47_Y
(define-fun |busyctr#30| ((state |busyctr_s|)) Bool (not (or  (= ((_ extract 0 0) (|busyctr#0| state)) #b1) (= ((_ extract 1 1) (|busyctr#0| state)) #b1) (= ((_ extract 2 2) (|busyctr#0| state)) #b1) (= ((_ extract 3 3) (|busyctr#0| state)) #b1) (= ((_ extract 4 4) (|busyctr#0| state)) #b1) (= ((_ extract 5 5) (|busyctr#0| state)) #b1) (= ((_ extract 6 6) (|busyctr#0| state)) #b1) (= ((_ extract 7 7) (|busyctr#0| state)) #b1) (= ((_ extract 8 8) (|busyctr#0| state)) #b1) (= ((_ extract 9 9) (|busyctr#0| state)) #b1) (= ((_ extract 10 10) (|busyctr#0| state)) #b1) (= ((_ extract 11 11) (|busyctr#0| state)) #b1) (= ((_ extract 12 12) (|busyctr#0| state)) #b1) (= ((_ extract 13 13) (|busyctr#0| state)) #b1) (= ((_ extract 14 14) (|busyctr#0| state)) #b1) (= ((_ extract 15 15) (|busyctr#0| state)) #b1)))) ; $eq$busyctr.v:16$6_Y
(define-fun |busyctr#31| ((state |busyctr_s|)) Bool (and (or  (|busyctr#2| state) false) (or  (|busyctr#30| state) false))) ; $logic_and$busyctr.v:16$7_Y
(define-fun |busyctr#32| ((state |busyctr_s|)) (_ BitVec 16) (ite (|busyctr#31| state) #b0000000000010101 (|busyctr#29| state))) ; $procmux$50_Y
(define-fun |busyctr#33| ((state |busyctr_s|)) (_ BitVec 16) (ite (|busyctr#3| state) #b0000000000000000 (|busyctr#32| state))) ; $0\counter[15:0]
(define-fun |busyctr_a| ((state |busyctr_s|)) Bool (and
  (|busyctr_a 0| state)
  (|busyctr_a 1| state)
))
(define-fun |busyctr_u| ((state |busyctr_s|)) Bool true)
(define-fun |busyctr_i| ((state |busyctr_s|)) Bool (and
  (= (= ((_ extract 0 0) (|busyctr#5| state)) #b1) false) ; f_past_valid
  (= (|busyctr#0| state) #b0000000000000000) ; counter
  (= (= ((_ extract 0 0) (|busyctr#8| state)) #b1) false) ; $formal$busyctr.v:42$4_EN
  (= (= ((_ extract 0 0) (|busyctr#10| state)) #b1) false) ; $formal$busyctr.v:37$3_EN
))
(define-fun |busyctr_h| ((state |busyctr_s|)) Bool true)
(define-fun |busyctr_t| ((state |busyctr_s|) (next_state |busyctr_s|)) Bool (and
  (= (|busyctr#13| state) (|busyctr#11| next_state)) ; $procdff$58 $formal$busyctr.v:37$3_CHECK
  (= (|busyctr#14| state) (|busyctr#10| next_state)) ; $procdff$59 $formal$busyctr.v:37$3_EN
  (= (|busyctr#25| state) (|busyctr#9| next_state)) ; $procdff$60 $formal$busyctr.v:42$4_CHECK
  (= (|busyctr#27| state) (|busyctr#8| next_state)) ; $procdff$61 $formal$busyctr.v:42$4_EN
  (= (ite (|busyctr#1| state) #b1 #b0) (|busyctr#7| next_state)) ; $procdff$56 $past$busyctr.v:41$1$0
  (= (|busyctr#0| state) (|busyctr#6| next_state)) ; $procdff$57 $past$busyctr.v:42$2$0
  (= #b1 (|busyctr#5| next_state)) ; $procdff$55 \f_past_valid
  (= (|busyctr#33| state) (|busyctr#0| next_state)) ; $procdff$62 \counter
)) ; end of module busyctr
; yosys-smt2-topmod busyctr
; end of yosys output
